@import url('https://fonts.googleapis.com/css2?family=Homemade+Apple&display=swap');
@import 'tailwindcss';

@plugin 'tailwindcss-animate';
@custom-variant dark (&:is(.dark *));

@theme {
  --radius-lg: var(--radius);
  --radius-md: calc(var(--radius) - 2px);
  --radius-sm: calc(var(--radius) - 4px);

  --color-background: hsl(var(--background));
  --color-foreground: hsl(var(--foreground));

  --color-card: hsl(var(--card));
  --color-card-foreground: hsl(var(--card-foreground));

  --color-popover: hsl(var(--popover));
  --color-popover-foreground: hsl(var(--popover-foreground));

  --color-primary: hsl(var(--primary));
  --color-primary-foreground: hsl(var(--primary-foreground));

  --color-secondary: hsl(var(--secondary));
  --color-secondary-foreground: hsl(var(--secondary-foreground));

  --color-muted: hsl(var(--muted));
  --color-muted-foreground: hsl(var(--muted-foreground));

  --color-accent: hsl(var(--accent));
  --color-accent-foreground: hsl(var(--accent-foreground));

  --color-destructive: hsl(var(--destructive));
  --color-destructive-foreground: hsl(var(--destructive-foreground));

  --color-border: hsl(var(--border));
  --color-input: hsl(var(--input));
  --color-ring: hsl(var(--ring));

  --color-chart-1: hsl(var(--chart-1));
  --color-chart-2: hsl(var(--chart-2));
  --color-chart-3: hsl(var(--chart-3));
  --color-chart-4: hsl(var(--chart-4));
  --color-chart-5: hsl(var(--chart-5));
}

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
}

/*
  The default border color has changed to `currentcolor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 0 0% 3.9%;
    --card: 0 0% 100%;
    --card-foreground: 0 0% 3.9%;
    --popover: 0 0% 100%;
    --popover-foreground: 0 0% 3.9%;
    --primary: 0 0% 9%;
    --primary-foreground: 0 0% 98%;
    --secondary: 0 0% 96.1%;
    --secondary-foreground: 0 0% 9%;
    --muted: 0 0% 96.1%;
    --muted-foreground: 0 0% 45.1%;
    --accent: 0 0% 96.1%;
    --accent-foreground: 0 0% 9%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 98%;
    --border: 0 0% 89.8%;
    --input: 0 0% 89.8%;
    --ring: 0 0% 3.9%;
    --chart-1: 12 76% 61%;
    --chart-2: 173 58% 39%;
    --chart-3: 197 37% 24%;
    --chart-4: 43 74% 66%;
    --chart-5: 27 87% 67%;
    --radius: 0.5rem;
  }
  .dark {
    --background: 0 0% 3.9%;
    --foreground: 0 0% 98%;
    --card: 0 0% 3.9%;
    --card-foreground: 0 0% 98%;
    --popover: 0 0% 3.9%;
    --popover-foreground: 0 0% 98%;
    --primary: 0 0% 98%;
    --primary-foreground: 0 0% 9%;
    --secondary: 0 0% 14.9%;
    --secondary-foreground: 0 0% 98%;
    --muted: 0 0% 14.9%;
    --muted-foreground: 0 0% 63.9%;
    --accent: 0 0% 14.9%;
    --accent-foreground: 0 0% 98%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 0% 98%;
    --border: 0 0% 14.9%;
    --input: 0 0% 14.9%;
    --ring: 0 0% 83.1%;
    --chart-1: 220 70% 50%;
    --chart-2: 160 60% 45%;
    --chart-3: 30 80% 55%;
    --chart-4: 280 65% 60%;
    --chart-5: 340 75% 55%;
  }
}

@layer base {
  * {
    border-color: hsl(var(--border));
  }
  
  html,
  body {
    background-color: hsl(var(--background));
    color: hsl(var(--foreground));
    min-height: 100%;
  }
}



/* Add this at the end of your globals.css */
/* 
@keyframes float {
  0% {
    transform: translateY(100vh) scale(var(--heart-scale, 1)) rotate(0deg);
    opacity: 0;
  }
  10% {
    opacity: 0.7;
  }
  90% {
    opacity: 0.7;
  }
  100% {
    transform: translateY(-100px) scale(var(--heart-scale, 1)) rotate(360deg);
    opacity: 0;
  }
}

.floating-heart {
  position: absolute; 
  width: var(--heart-size, 32px);
  height: var(--heart-size, 32px);
  left: var(--heart-left, 50%);
  pointer-events: none;
  z-index: 0;
  animation: float 8s linear infinite;
  will-change: transform, opacity;
} */

/* Add this to your globals.css */
.how-it-works-card {
  min-height: 280px;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

.how-it-works-icon {
  min-height: 80px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.how-it-works-content {
  min-height: 120px;
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
}

/* Performance optimizations for mobile */
@media (max-width: 768px) {
  /* Reduce animation complexity on mobile */
  * {
    will-change: auto !important;
  }
  
  /* Optimize scrolling */
  html {
    scroll-behavior: auto;
  }
}

/* Reduce motion for users who prefer it */
@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
}

.homemade-apple-regular {
  font-family: 'Homemade Apple', cursive;
  font-weight: 400;
  font-style: normal;
}


body {
  cursor: url('data:image/svg+xml,%3Csvg%20xmlns%3D%27http%3A//www.w3.org/2000/svg%27%20width%3D%2724%27%20height%3D%2724%27%20viewBox%3D%270%200%20512%20512%27%3E%3Cpolygon%20fill%3D%27%239f7fc0%27%20points%3D%2778.016%2C16.592%20438.976%2C320%20204.648%2C305.096%2058.272%2C487.936%27/%3E%3Cpath%20fill%3D%27%239f7fc0%27%20d%3D%27M85.328%2C33.192L415.2%2C310.472l-205.888-13.096l-8.304-0.528l-5.2%2C6.496L67.288%2C463.88L85.328%2C33.192%20M70.704%2C0L49.256%2C512l159.04-198.656l254.448%2C16.184L70.704%2C0z%27/%3E%3C/svg%3E') 0 0, auto;
}

a, button, [role="button"], .cursor-pointer {
  cursor: pointer;
}




